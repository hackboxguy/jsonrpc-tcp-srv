#!/bin/sh
#
# Start/stop server script
#
CLIENT_NAME=/opt/fmw/bin/xmproxyclt
SERVER_NAME=xmproxysrv
SERVER_PATH=/opt/fmw/bin/
DEV_TYPE_FILE=/tmp/BrBoxDevType.txt
LOGINFILE_NAME=xmpp-login.txt
ALIAS_LIST_NAME=xmpp-alias-list.txt
BOT_NAME_FILE=xmpp-bot-name.txt
XMPP_LOGIN_DATA=/mnt/settings/etc/$LOGINFILE_NAME
ALIAS_LIST_DATA=/mnt/settings/etc/$ALIAS_LIST_NAME
BOT_NAME_DATA=/mnt/settings/etc/$BOT_NAME_FILE
BOOT_BRBOX_PART=mmcblk0p1
SETTINGS_MOUNT_POINT=/mnt/settings
CheckIfNewXmppLoginExists() 
{
	TEMP_BOOT_MOUNT_POINT=$(mktemp -d)
	if [ $? != "0" ]; then #unable to create temp mount directory
		echo "Error: Unable to create temp directory for boot mount!!!"
		return 1
	fi
	BRBOX_BOOT_PARTITION=/dev/$BOOT_BRBOX_PART
	mount $BRBOX_BOOT_PARTITION $TEMP_BOOT_MOUNT_POINT
	if [ $? != "0" ]; then #unable mount device, boot-filesystem might be corrupt
		echo "Error: Unable to mount $BRBOX_BOOT_PARTITION to $TEMP_BOOT_MOUNT_POINT!!!"
		rm -rf $TEMP_BOOT_MOUNT_POINT
		return 1
	fi
	#if there exist new xmpp.login under boot partition, copy this new file to /mnt/settings/etc, else do nothing
	if [ -f "$TEMP_BOOT_MOUNT_POINT/$LOGINFILE_NAME" ]; then
		cmp $TEMP_BOOT_MOUNT_POINT/$LOGINFILE_NAME $XMPP_LOGIN_DATA > /dev/null 2>/dev/null
		[ $? != 0 ] && cp $TEMP_BOOT_MOUNT_POINT/$LOGINFILE_NAME $XMPP_LOGIN_DATA
	fi	
	sync
	umount $BRBOX_BOOT_PARTITION
	rm -rf $TEMP_BOOT_MOUNT_POINT
	return 0
}
start() {
	echo -n "Starting $SERVER_NAME Service: "
	DEV_TYPE=$(cat $DEV_TYPE_FILE)
	CheckIfNewXmppLoginExists
	sleep 3 #sleep is needed incase if usbgsm driver is loading is late
	GSM_NODES=$(cat /proc/tty/driver/usbserial 2>/dev/null | grep "GSM modem"|wc -l)
	if [ $GSM_NODES = "3" ]; then #if usb-gsm-module is connected, then let xmproxy know
		$SERVER_PATH/$SERVER_NAME --boardtype=$DEV_TYPE --loginfile=$XMPP_LOGIN_DATA --aliaslist=$ALIAS_LIST_DATA --botname=$BOT_NAME_DATA --usbgsm=1 &
	else
		$SERVER_PATH/$SERVER_NAME --boardtype=$DEV_TYPE --loginfile=$XMPP_LOGIN_DATA --aliaslist=$ALIAS_LIST_DATA --botname=$BOT_NAME_DATA --usbgsm=0 &
	fi
	echo "OK"
}

stop() {
	echo -n "Stopping $SERVER_NAME Service:  "
	$CLIENT_NAME --shutdown
	sleep 1
	echo "OK"
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	stop
	start
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?
